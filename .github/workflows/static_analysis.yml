name: static_analysis

# Run this workflow every time a new commit is pushed to the repo
on:
  push:
# The following will run on The 1st and 15th of every month at 1:30 UTC
  schedule:
    - cron: '30 1 1,15 * *'
  workflow_dispatch:
jobs:
  run-unit-tests:
    name: Check for deprecations and other static analysis
    runs-on:  ubuntu-latest
    env:
      MODULE: <project_name>
      COMPOSER_MEMORY_LIMIT: -1
      # Note, the username, password, port and db match mysql service setup.
      SIMPLETEST_DB: mysql://root:root@127.0.0.1:3306/<project_name>
      SIMPLETEST_BASE_URL: http://localhost:8888
      PROJECT_ROOT: .
      DRUPAL_ROOT: ./docroot
      PHP_VERSION: '8.1'
    steps:
      - uses: actions/checkout@v2
      - uses: nanasess/setup-chromedriver@master
      - name: Launch Chrome Driver
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
      - name: Shut down Ubuntu MySQL
        run: sudo service mysql stop #shutdown default mysql, sudo is necessary
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.7'
          mysql database: ${{ env.MODULE }}
          mysql root password: root
      - name: Set up php version ${{ env.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: date, dom, filter, gd, hash, json, mbstring, pcre, pdo, session, tokenizer, xml
          # Includes code coveage for phpunit, but disables xDebug
          coverage: pcov
      - name: Get Composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      # Create new drupal project with Composer install
      - name: Install Drupal with Composer
        run: composer update
      # Testing out phpstan-drupl for deprecation checking
      - name: Deprecation check with PHPStan / PHPStan Drupal
        run: ./vendor/bin/phpstan analyze --memory-limit 1G docroot/modules/contrib/${{ env.MODULE }}
